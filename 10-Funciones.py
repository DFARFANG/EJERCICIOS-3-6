# FUNCIONES.- Son tareas espec√≠ficas a ejecturar o realizar
# SINTAXIS:
'''
def Nombre_de_la_Funci√≥n(par√°metros o argumentos):
  instrucciones o procesos que va a realizar la funci√≥n
  return valor        (Se dice que devuelve, retorna o regresa un valor)
'''

# Declarar o crear una Funci√≥n
def Saludar(): # Verbos
  print("Hola Mundo")

def Sumar(a, b):  # La funci√≥n obtiene o recibe 2 Par√°metros o Argumentos
  suma = a + b
  return suma

def Restar(num1, num2):
  return num1 - num2

def Generar_contrase√±a(num_caracteres):
  if (num_caracteres <= 5):
    print("Contrase√±a creada de tantos caracteres")
  else:
    print("ERROR")

print("*********** MEN√ö DE OPCIONES / M√ìDULOS ***************")
print("‚ùé 1. Saludo")
print("üòÅ 2. Suma")
print("üòÇ 3. Resta")
print("4. Multiplicar")
print("5. Dividir")
opci√≥n = int(input("Ingresa una opci√≥n: "))

if (opci√≥n == 1):
  Saludar()   # Mandar a llamar o invocar una Funci√≥n para ejecutarla
elif (opci√≥n == 2):
  print("La suma =", Sumar(10.5, 3)) # Mando a llamar la funci√≥n y le paso o enviar los Par√°metros o Argumentos
elif (opci√≥n == 3):
  print("La resta =", Restar(10, 5))
else:
  print("Opci√≥n no vaÃÅlida")
 6 changes: 6 additions & 0 deletions6  
OperacionesMatem√°ticas.py
@@ -1,12 +1,18 @@
# Operaciones Matem√°ticas

# PARADIGMA (Enfoque para realizar algo)
# ESTRUCTURADO: Secuencial, Selectivo/Decisivo e Iterativo
# FUNCIONAL/PROCEDIMIENTOS, DECLARATIVO (SQL), PROGRAMACI√ìN ORIENTADA A OBJETOS, O A EVENTOS

# Importar bibliotecas o librer√≠as de Funciones Matem√°ticas
import math

# ENTRADA DE DATOS 
# Declarar, crear o instancias variables o constantes
n√∫mero_1 = float(input("Ingresa un n√∫mero: ")) # CASTEO.- Conversi√≥n de un tipo de dato a otro tipo de dato
n√∫mero_2 = float(input("Ingresa otro n√∫mero: "))
# Declarar una CONSTANTE
PI = 3.1416

# PROCESOS (C√°lculos y operaciones matem√°ticas y l√≥gicas)
suma = n√∫mero_1 + n√∫mero_2